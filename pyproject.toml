[tool.poetry]
name = "survey-assist-utils"
version = "0.1.0"
description = "Utility module for Survey Assist"
authors = ["Steve Gibbard <steve.gibbard@ons.gov.uk>"]
license = "MIT"
readme = "README.md"

packages = [{ include = "survey_assist_utils", from = "src" }]

[tool.poetry.scripts]
generate-api-token = "survey_assist_utils.api_token.jwt_utils:generate_api_token"

[tool.poetry.dependencies]
python = "^3.12"
google-auth = "^2.36.0"
google-cloud-logging = "^3.9.0"
pandas = "^2.2.3"
matplotlib = "^3.10.1"
dotenv = "^0.9.9"
python-dotenv = "^1.1.0"
seaborn = "^0.13.2"
pre-commit = "^4.2.0"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
mkdocs-material = "^9.6.7"
pytest-cov = "^6.0.0"
black = "^25.1.0"
ruff = "^0.9.10"
pylint = "^3.3.5"
mypy = "^1.15.0"
isort = "^6.0.1"
bandit = "^1.8.3"
pytest = "^8.3.5"
ipykernel = "^6.29.5"
pre-commit = "^4.2.0"
types-toml = "^0.10.8.20240310"
jupytext = "^1.17.1"

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    # Enabling ALL is not recommended it will implicitly enable new rules after upgrade.
    # "ALL",

    # Ruff rules: https://docs.astral.sh/ruff/rules/

    "E",      # pycodestyle erros
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "UP",     # pyupgrade
    "I",      # isort
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "C4",     # flake8-comprehensions
    "S",      # flake8-bandit
    "D",      # pydocstyle - Enforce existing docstrings only
    "C90",    # mccabe
    "RUF",    # Ruff specific rules

    # PL - Pylint is only partially supported, we also use the pylint tool to catch all the rules.
    # It is enabled here to take advantage of the ruff's speed.
    "PL",
]

ignore = [
    # Conflicts with google docstring style
    "D205",
    # Allow missing docstring, remove to enforce docstrings across the board
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    # Disable line length check as it is handled by black
    # :TODO: Remove E501 when ruff supports all black rules
    "E501",
    # indentation contains tabs
    "W191",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    # Allow use of assert statements in tests
    "S101",
    # Allow unused imports in tests as they might be used in fixtures or mocks
    "F401",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.MASTER]
disable = ["E0401"]
