FROM python:3.12.10-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    POETRY_VERSION=2.1.1 \
    HOME=/home/appuser

# Create non-root user
RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser

# Install system dependencies and Poetry with export plugin
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential curl gcc libffi-dev libssl-dev git \
    && pip install --upgrade pip \
    && pip install "poetry==$POETRY_VERSION" "poetry-plugin-export" \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# To find module
ENV PYTHONPATH="/app/src"

# Copy only poetry-related files first for layer caching
COPY ../../pyproject.toml ../../poetry.lock* ./

# Copy the rest of the source code and script
COPY ../../scripts/batch.py ./scripts/
COPY ../../src ./src
COPY ../../config.toml ./config.toml

# Fix permissions and prepare poetry config
RUN mkdir -p /home/appuser/.config/pypoetry \
    && chown -R appuser:appgroup /app /home/appuser/.config

# Install Python dependencies via pip using exported requirements
RUN poetry config virtualenvs.create false \
    && poetry export -f requirements.txt --without-hashes --only main > requirements.txt \
    && pip install --upgrade pip \
    && pip install --no-cache-dir --prefix=/usr/local -r requirements.txt \
    && rm requirements.txt

# ðŸ›  Fix permissions after install
RUN chown -R appuser:appgroup /home/appuser/.config /home/appuser

# Switch to non-root user
USER appuser

# Run the batch script via poetry
ENTRYPOINT ["poetry", "run", "python", "scripts/batch.py"]
